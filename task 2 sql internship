-- Customers table
CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    address VARCHAR(255),
    phone_number VARCHAR(20)
);

-- Products table
CREATE TABLE Products (
    product_id INT PRIMARY KEY ,
    product_name VARCHAR(100) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT NOT NULL DEFAULT 0
);

-- Orders table
CREATE TABLE Orders (
    order_id INT PRIMARY KEY ,
    customer_id INT NOT NULL,
    order_date DATE NOT NULL,
    total_amount DECIMAL(10, 2) NOT NULL,
    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);

-- Order_Items table
CREATE TABLE Order_Items (
    order_item_id INT PRIMARY KEY ,
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    FOREIGN KEY (order_id) REFERENCES Orders(order_id)
        ON DELETE CASCADE
        ON UPDATE CASCAD11E,
    FOREIGN KEY (product_id) REFERENCES Products(product_id)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);
-- Insert a customer with all details
INSERT INTO Customers (first_name, last_name, email, address, phone_number)
VALUES ('Alice', 'Smith', 'alice.smith@example.com', '123 Main St, Anytown', '555-1234');

-- Insert another customer, leaving email and phone_number as NULL (missing)
INSERT INTO Customers (first_name, last_name, address)
VALUES ('Bob', 'Johnson', '456 Oak Ave, Otherville');

-- Insert a customer with only mandatory fields (first_name, last_name).
-- email, address, phone_number will automatically be NULL.
INSERT INTO Customers (first_name, last_name)
VALUES ('Charlie', 'Brown');

-- Insert a product with all details
INSERT INTO Products (product_name, description, price, stock_quantity)
VALUES ('Laptop X1', 'Powerful and lightweight laptop', 1200.00, 50);

-- Insert another product, leaving description as NULL
INSERT INTO Products (product_name, price, stock_quantity)
VALUES ('Wireless Mouse', NULL, 200); -- Explicitly setting description to NULL

-- Insert a product where description is implicitly NULL by not listing it
INSERT INTO Products (product_name, price, stock_quantity)
VALUES ('Mechanical Keyboard', 99.99, 150);

-- Assuming customer_id 1 exists (Alice Smith)
INSERT INTO Orders (customer_id, order_date, total_amount)
VALUES (1, '2025-06-25', 1250.00);

-- Assuming customer_id 2 exists (Bob Johnson)
INSERT INTO Orders (customer_id, order_date, total_amount)
VALUES (2, '2025-06-25', 25.50);

-- Add Laptop X1 (product_id 1) to Order 1 (order_id 1)
INSERT INTO Order_Items (order_id, product_id, quantity, unit_price)
VALUES (1, 1, 1, 1200.00);

-- Add Wireless Mouse (product_id 2) to Order 1
INSERT INTO Order_Items (order_id, product_id, quantity, unit_price)
VALUES (1, 2, 1, 25.00); -- Note: unit_price can differ from product's current price

-- Add Mechanical Keyboard (product_id 3) to Order 2
INSERT INTO Order_Items (order_id, product_id, quantity, unit_price)
VALUES (2, 3, 1, 99.99);

UPDATE table_name
SET column1 = new_value1, column2 = new_value2, ...
WHERE condition;

UPDATE Customers
SET email = 'alice.smith.new@example.com'
WHERE customer_id = 1;

UPDATE Customers
SET address = '789 Pine Rd, Midtown', phone_number = '555-5678'
WHERE first_name = 'Bob' AND last_name = 'Johnson';

UPDATE Customers
SET email = 'charlie.brown@example.com'
WHERE customer_id = 3;
UPDATE Customers
SET address = NULL
WHERE customer_id = 2; -- Bob Johnson's address will become NULL
UPDATE Products
SET price = 1250.00
WHERE product_name = 'Laptop X1';
UPDATE Products
SET description = 'Compact and precise pointing device'
WHERE product_id = 2;
UPDATE Products
SET stock_quantity = stock_quantity - 5 -- Subtract 5 from current stock
WHERE product_id = 1;
UPDATE Orders
SET total_amount = 1225.00
WHERE order_id = 1;

DELETE FROM table_name
WHERE condition;

DELETE FROM Customers
WHERE customer_id = 3; -- Deletes Charlie Brown